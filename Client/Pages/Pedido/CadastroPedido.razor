@page "/Pedido/CadastroPedido"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Pedido</h4>
    <div class="card-body">
        <EditForm Model="@pedidoDto" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-row">
                <label>Categorias</label>
                <InputSelect 
                    ValueExpression="@(()=>pedidoDto.CategoriaId)" 
                    Value="@pedidoDto.CategoriaId"
                    ValueChanged="@((string value) => OnChangeCat(value))">
                    <option value="">Selecione a Categoria</option>
                    @foreach (var categoria in categoriasList)
                            {
                                <option value="@categoria.CategoriaId">@categoria.Name</option>
                            }
                </InputSelect>
            </div>

            <div class="form-row">
                        <label>Produtos</label>
                        <InputSelect @bind-Value="pedidoDto.ProdutoId">
                            <option value="">Selecione o Produto</option>
                            @foreach (var produto in produtosList)
                            {
                                <option value="@produto.ProductId">@produto.Nome</option>
                            }
                        </InputSelect>
            </div>
            <div class="form-row">
                        <label>Quantidade</label>
                        <InputNumber @bind-Value="pedidoDto.Quantidade" class="form-control" />
            </div>
            <div class="text-center">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
                </EditForm>
            </div>
        </div>

        @code {
    private PedidoDto pedidoDto = new PedidoDto();
    private EditContext editContext { get; set; }
    private List<Categoria> categoriasList = new List<Categoria>();
    private List<Product> produtosList = new List<Product>();

    [Parameter]
    public string Text { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var categorias = await Http.GetFromJsonAsync<List<Categoria>>("/Categoria/List");
        foreach (var item in categorias)
        {
            categoriasList.Add(item);
        }
    }



    private async Task OnChangeCat(string value)
    {
        pedidoDto.CategoriaId = value; //Seta o valor da Categoria no pedidoDto
        var produtos = await Http.GetFromJsonAsync<List<Product>>("/Product/List");
        produtosList.Clear();
        var produtosByCategory = produtos.Where(c => c.CategoriaId == Convert.ToInt32(value));
        foreach (var item in produtosByCategory) //LINQ
        {
            produtosList.Add(item);
        }

    }

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("/Pedido/Create", pedidoDto);
        NavigationManager.NavigateTo("Product/ListProduct");
    }


}
